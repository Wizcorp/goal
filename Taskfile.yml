##
# Taskfile
#
# See: https://taskfile.org/#/usage
##

##
# Taskfile format version in use in this file
##
version: '2'

##
# Sources list
##
sources: &sources
  - app.go
  - src/**/*.go

##
# Build tasks
##
tasks:
  ##
  # Cleanup task
  ##
  clean:
    desc: "Clean up vendor files and generated code"
    silent: true
    cmds:
    - task: clean:messages
    - task: clean:deps

  ##
  # Messages
  ##
  proto:
    desc: "Generate messages code from Protobuf"
    silent: true
    generates:
    - ./src/proto/*.pb.go
    cmds:
    - protoc --twirp_out=./ --go_out=./ ./src/proto/*.proto

  clean:proto:
    desc: "Clean up generated code by Protobuf"
    silent: true
    cmds:
    - rm ./src/proto/*.pb.go

  proto:template:
    desc: "Generate messages code of the template from Protobuf"
    silent: true
    generates:
    - ./src/proto/*.pb.go
    cmds:
    - protoc --twirp_out=./ --go_out=./ ./_template/src/proto/*.proto

  clean:proto:template:
    desc: "Clean up generated code by Protobuf in the template"
    silent: true
    cmds:
    - rm ./_template/src/proto/*.pb.go

  ##
  # Dependencies
  ##
  deps:
    desc: "Install all dependencies and re-generate message code"
    silent: true
    cmds:
    - go get github.com/golang/protobuf/protoc-gen-go
    - go get github.com/twitchtv/twirp/protoc-gen-twirp
    - go get
    - task: proto

  deps:update:
    desc: "Upgrade code dependencies"
    silent: true
    cmds:
    - go get -u

  clean:deps:
    desc: "Clean up dependencies and generated code"
    silent: true
    cmds:
    - rm -r ./vendor
    - task: clean:messages

  ##
  # Tests
  ##
  test:lint:
    desc: "Lint code using golint"
    silent: true
    sources: *sources
    cmds:
    - golint -set_exit_status=true

  test:unit:
    desc: "Run unit test suite"
    silent: true
    ##
    # There seems to be some issues with how globs are processed by Task;
    # the line below is a workaround which won't work on Windows, but
    # will work on *nix compatible platforms
    #
    # See: https://github.com/go-task/task/issues/153
    ##
    sources: *sources
    cmds:
    - go test ./src/* -bench=.

  test:
    desc: "Run all tests for this project"
    silent: true
    sources: *sources
    cmds:
    - task: test:lint
    - task: test:unit

  ##
  # Development
  ##
  run:
    desc: "Run server locally"
    silent: true
    ignore_error: true
    env:
      COLORS: "true"
    sources: *sources
    cmds:
    - go run ./app.go

  run:docker:
    desc: "Run server using the Docker image"
    silent: true
    sources: *sources
    cmds:
    - docker-compose up

  ##
  # Build tasks
  ##
  build:binary:
    desc: "Build the server's binary"
    silent: true
    sources: *sources
    cmds:
    - go build -o ./builds/server

  build:docker:
    desc: "Build the Docker image for this server"
    silent: true
    cmds:
    - docker-compose build

  build:
    desc: "Build all artifacts related to this project"
    silent: true
    cmds:
    - task: build:binary
    - task: build:docker

  install:
    desc: "Build binary and install it to GOPATH/bin"
    silent: true
    cmds:
    - go install
  